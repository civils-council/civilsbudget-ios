//
//  CivilbudgetStyleKit.swift
//  Civilbudget
//
//  Created by Max Odnovolyk on 12/28/15.
//  Copyright (c) 2015 Build Apps. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class CivilbudgetStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let themeDarkBlue: UIColor = UIColor(red: 0.322, green: 0.361, blue: 0.600, alpha: 1.000)
        static let bottomCopyrightGrey: UIColor = UIColor(red: 0.816, green: 0.816, blue: 0.816, alpha: 1.000)
        static let placeholderBackgroundGrey: UIColor = UIColor(red: 0.977, green: 0.977, blue: 0.977, alpha: 1.000)
        static let selectedCellBackgroundGrey: UIColor = UIColor(red: 0.926, green: 0.926, blue: 0.926, alpha: 1.000)
        static let themeLightBlue: UIColor = UIColor(red: 0.388, green: 0.584, blue: 0.878, alpha: 1.000)
        static let loadingStatusBackgroundGrey: UIColor = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1.000)
        static var imageOfBankIDFullLogoImage: UIImage?
        static var bankIDFullLogoImageTargets: [AnyObject]?
        static var imageOfBottomSocialButtonBackground: UIImage?
        static var bottomSocialButtonBackgroundTargets: [AnyObject]?
        static var imageOfDetailsButtonBackground: UIImage?
        static var detailsButtonBackgroundTargets: [AnyObject]?
        static var imageOfUserProfileImagePlaceholder: UIImage?
        static var userProfileImagePlaceholderTargets: [AnyObject]?
        static var imageOfSadCloudImage: UIImage?
        static var sadCloudImageTargets: [AnyObject]?
        static var imageOfDownloadingCloudsImage: UIImage?
        static var downloadingCloudsImageTargets: [AnyObject]?
        static var imageOfBackArrowIcon: UIImage?
        static var backArrowIconTargets: [AnyObject]?
    }

    //// Colors

    public class var themeDarkBlue: UIColor { return Cache.themeDarkBlue }
    public class var bottomCopyrightGrey: UIColor { return Cache.bottomCopyrightGrey }
    public class var placeholderBackgroundGrey: UIColor { return Cache.placeholderBackgroundGrey }
    public class var selectedCellBackgroundGrey: UIColor { return Cache.selectedCellBackgroundGrey }
    public class var themeLightBlue: UIColor { return Cache.themeLightBlue }
    public class var loadingStatusBackgroundGrey: UIColor { return Cache.loadingStatusBackgroundGrey }

    //// Drawing Methods

    public class func drawBankIDFullLogoImage() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.111, green: 0.257, blue: 0.475, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.235, green: 0.564, blue: 0.695, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(56.92, 130.83))
        bezierPath.addCurveToPoint(CGPointMake(90.76, 106.54), controlPoint1: CGPointMake(68.2, 122.73), controlPoint2: CGPointMake(79.48, 114.63))
        bezierPath.addCurveToPoint(CGPointMake(114.67, 89.45), controlPoint1: CGPointMake(98.72, 100.83), controlPoint2: CGPointMake(106.64, 95.07))
        bezierPath.addCurveToPoint(CGPointMake(117.14, 84.73), controlPoint1: CGPointMake(116.44, 88.22), controlPoint2: CGPointMake(117.15, 86.91))
        bezierPath.addCurveToPoint(CGPointMake(117.16, 45.08), controlPoint1: CGPointMake(117.03, 71.51), controlPoint2: CGPointMake(116.98, 58.29))
        bezierPath.addCurveToPoint(CGPointMake(113.39, 41.49), controlPoint1: CGPointMake(117.21, 42.01), controlPoint2: CGPointMake(116.16, 41.44))
        bezierPath.addCurveToPoint(CGPointMake(86.21, 41.47), controlPoint1: CGPointMake(104.33, 41.64), controlPoint2: CGPointMake(95.27, 41.68))
        bezierPath.addCurveToPoint(CGPointMake(82.23, 45.33), controlPoint1: CGPointMake(83.17, 41.4), controlPoint2: CGPointMake(82.18, 42.11))
        bezierPath.addCurveToPoint(CGPointMake(82.4, 84.09), controlPoint1: CGPointMake(82.43, 58.24), controlPoint2: CGPointMake(82.19, 71.17))
        bezierPath.addCurveToPoint(CGPointMake(78.63, 89.47), controlPoint1: CGPointMake(82.46, 87.19), controlPoint2: CGPointMake(81.43, 88.5))
        bezierPath.addCurveToPoint(CGPointMake(53.78, 98.62), controlPoint1: CGPointMake(70.4, 92.33), controlPoint2: CGPointMake(62.28, 95.47))
        bezierPath.addCurveToPoint(CGPointMake(53.78, 41.6), controlPoint1: CGPointMake(53.78, 79.31), controlPoint2: CGPointMake(53.78, 60.46))
        bezierPath.addCurveToPoint(CGPointMake(53.78, 9.97), controlPoint1: CGPointMake(53.78, 31.06), controlPoint2: CGPointMake(53.77, 20.51))
        bezierPath.addCurveToPoint(CGPointMake(56.02, 6.74), controlPoint1: CGPointMake(53.78, 8.41), controlPoint2: CGPointMake(53.3, 6.64))
        bezierPath.addCurveToPoint(CGPointMake(108.91, 8.46), controlPoint1: CGPointMake(73.65, 7.4), controlPoint2: CGPointMake(91.37, 5.21))
        bezierPath.addCurveToPoint(CGPointMake(157.59, 73.29), controlPoint1: CGPointMake(142.26, 14.64), controlPoint2: CGPointMake(159.48, 38.73))
        bezierPath.addCurveToPoint(CGPointMake(143.76, 111), controlPoint1: CGPointMake(156.82, 87.27), controlPoint2: CGPointMake(153.02, 100.13))
        bezierPath.addCurveToPoint(CGPointMake(103.58, 130.67), controlPoint1: CGPointMake(133.22, 123.39), controlPoint2: CGPointMake(119.14, 128.63))
        bezierPath.addCurveToPoint(CGPointMake(56.92, 130.83), controlPoint1: CGPointMake(88.2, 132.69), controlPoint2: CGPointMake(72.73, 131.08))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        bezierPath.usesEvenOddFillRule = true;

        fillColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(253.24, 73.37))
        bezier2Path.addCurveToPoint(CGPointMake(255.43, 74.52), controlPoint1: CGPointMake(254.17, 73.86), controlPoint2: CGPointMake(254.78, 74.24))
        bezier2Path.addCurveToPoint(CGPointMake(268.55, 95.09), controlPoint1: CGPointMake(264.77, 78.58), controlPoint2: CGPointMake(268.91, 85.06))
        bezier2Path.addCurveToPoint(CGPointMake(254, 114.58), controlPoint1: CGPointMake(268.25, 103.71), controlPoint2: CGPointMake(262.38, 111.61))
        bezier2Path.addCurveToPoint(CGPointMake(242.21, 116.58), controlPoint1: CGPointMake(250.19, 115.92), controlPoint2: CGPointMake(246.26, 116.59))
        bezier2Path.addCurveToPoint(CGPointMake(206.11, 116.64), controlPoint1: CGPointMake(230.17, 116.56), controlPoint2: CGPointMake(218.14, 116.48))
        bezier2Path.addCurveToPoint(CGPointMake(202.04, 112.69), controlPoint1: CGPointMake(203.06, 116.68), controlPoint2: CGPointMake(202.02, 115.87))
        bezier2Path.addCurveToPoint(CGPointMake(202.11, 37.36), controlPoint1: CGPointMake(202.16, 87.58), controlPoint2: CGPointMake(202.1, 62.47))
        bezier2Path.addCurveToPoint(CGPointMake(204.77, 33.49), controlPoint1: CGPointMake(202.11, 35.51), controlPoint2: CGPointMake(201.56, 33.38))
        bezier2Path.addCurveToPoint(CGPointMake(244.36, 34.46), controlPoint1: CGPointMake(217.96, 33.94), controlPoint2: CGPointMake(231.22, 32.51))
        bezier2Path.addCurveToPoint(CGPointMake(263.37, 61.27), controlPoint1: CGPointMake(258.53, 36.56), controlPoint2: CGPointMake(266.37, 47.86))
        bezier2Path.addCurveToPoint(CGPointMake(253.24, 73.37), controlPoint1: CGPointMake(262.09, 66.98), controlPoint2: CGPointMake(258.12, 70.32))
        bezier2Path.closePath()
        bezier2Path.moveToPoint(CGPointMake(231.81, 100.7))
        bezier2Path.addCurveToPoint(CGPointMake(243.12, 99.69), controlPoint1: CGPointMake(235.19, 100.57), controlPoint2: CGPointMake(239.18, 100.87))
        bezier2Path.addCurveToPoint(CGPointMake(249.17, 91.47), controlPoint1: CGPointMake(247.34, 98.43), controlPoint2: CGPointMake(249.12, 95.68))
        bezier2Path.addCurveToPoint(CGPointMake(243.18, 83.27), controlPoint1: CGPointMake(249.21, 87.23), controlPoint2: CGPointMake(247.42, 84.47))
        bezier2Path.addCurveToPoint(CGPointMake(229.91, 82.27), controlPoint1: CGPointMake(238.8, 82.02), controlPoint2: CGPointMake(234.35, 82.3))
        bezier2Path.addCurveToPoint(CGPointMake(221.11, 90.79), controlPoint1: CGPointMake(221.11, 82.22), controlPoint2: CGPointMake(221.11, 82.26))
        bezier2Path.addCurveToPoint(CGPointMake(231.81, 100.7), controlPoint1: CGPointMake(221.11, 100.7), controlPoint2: CGPointMake(221.11, 100.7))
        bezier2Path.closePath()
        bezier2Path.moveToPoint(CGPointMake(220.85, 58.44))
        bezier2Path.addCurveToPoint(CGPointMake(220.85, 64.66), controlPoint1: CGPointMake(220.85, 60.51), controlPoint2: CGPointMake(220.88, 62.59))
        bezier2Path.addCurveToPoint(CGPointMake(223.52, 67.29), controlPoint1: CGPointMake(220.82, 66.5), controlPoint2: CGPointMake(221.62, 67.32))
        bezier2Path.addCurveToPoint(CGPointMake(238.12, 66.44), controlPoint1: CGPointMake(228.4, 67.2), controlPoint2: CGPointMake(233.29, 67.52))
        bezier2Path.addCurveToPoint(CGPointMake(244.61, 58.74), controlPoint1: CGPointMake(242.3, 65.51), controlPoint2: CGPointMake(244.57, 63.14))
        bezier2Path.addCurveToPoint(CGPointMake(238.4, 50.36), controlPoint1: CGPointMake(244.65, 53.93), controlPoint2: CGPointMake(242.97, 51.68))
        bezier2Path.addCurveToPoint(CGPointMake(229.58, 49.58), controlPoint1: CGPointMake(235.49, 49.52), controlPoint2: CGPointMake(232.54, 49.58))
        bezier2Path.addCurveToPoint(CGPointMake(220.85, 58.44), controlPoint1: CGPointMake(220.84, 49.57), controlPoint2: CGPointMake(220.84, 49.57))
        bezier2Path.closePath()
        bezier2Path.miterLimit = 4;

        bezier2Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(529.45, 75))
        bezier3Path.addCurveToPoint(CGPointMake(529.36, 37.57), controlPoint1: CGPointMake(529.45, 62.52), controlPoint2: CGPointMake(529.58, 50.04))
        bezier3Path.addCurveToPoint(CGPointMake(533.61, 33.45), controlPoint1: CGPointMake(529.3, 34.14), controlPoint2: CGPointMake(530.32, 33.32))
        bezier3Path.addCurveToPoint(CGPointMake(568.77, 34.26), controlPoint1: CGPointMake(545.32, 33.9), controlPoint2: CGPointMake(557.07, 32.85))
        bezier3Path.addCurveToPoint(CGPointMake(604.39, 82.06), controlPoint1: CGPointMake(594.65, 37.39), controlPoint2: CGPointMake(607.83, 55.57))
        bezier3Path.addCurveToPoint(CGPointMake(566.87, 116.27), controlPoint1: CGPointMake(601.71, 102.68), controlPoint2: CGPointMake(588.25, 114.86))
        bezier3Path.addCurveToPoint(CGPointMake(532.12, 116.68), controlPoint1: CGPointMake(555.33, 117.02), controlPoint2: CGPointMake(543.7, 116.46))
        bezier3Path.addCurveToPoint(CGPointMake(529.45, 112.87), controlPoint1: CGPointMake(528.9, 116.74), controlPoint2: CGPointMake(529.45, 114.74))
        bezier3Path.addCurveToPoint(CGPointMake(529.45, 75), controlPoint1: CGPointMake(529.45, 100.25), controlPoint2: CGPointMake(529.45, 87.62))
        bezier3Path.closePath()
        bezier3Path.moveToPoint(CGPointMake(556.81, 49.9))
        bezier3Path.addCurveToPoint(CGPointMake(556.8, 50.06), controlPoint1: CGPointMake(556.81, 49.96), controlPoint2: CGPointMake(556.81, 50.01))
        bezier3Path.addCurveToPoint(CGPointMake(551.46, 50.03), controlPoint1: CGPointMake(555.02, 50.06), controlPoint2: CGPointMake(553.23, 50.2))
        bezier3Path.addCurveToPoint(CGPointMake(548.23, 53.4), controlPoint1: CGPointMake(548.84, 49.79), controlPoint2: CGPointMake(548.21, 50.98))
        bezier3Path.addCurveToPoint(CGPointMake(548.24, 97.05), controlPoint1: CGPointMake(548.31, 67.95), controlPoint2: CGPointMake(548.29, 82.5))
        bezier3Path.addCurveToPoint(CGPointMake(551.15, 100.28), controlPoint1: CGPointMake(548.23, 99.18), controlPoint2: CGPointMake(548.62, 100.42))
        bezier3Path.addCurveToPoint(CGPointMake(565.81, 99.72), controlPoint1: CGPointMake(556.03, 100.02), controlPoint2: CGPointMake(560.92, 100.45))
        bezier3Path.addCurveToPoint(CGPointMake(586.11, 75.77), controlPoint1: CGPointMake(578.74, 97.76), controlPoint2: CGPointMake(585.85, 89.47))
        bezier3Path.addCurveToPoint(CGPointMake(566.57, 50.64), controlPoint1: CGPointMake(586.36, 61.98), controlPoint2: CGPointMake(579.27, 52.77))
        bezier3Path.addCurveToPoint(CGPointMake(556.81, 49.9), controlPoint1: CGPointMake(563.36, 50.11), controlPoint2: CGPointMake(560.07, 50.13))
        bezier3Path.closePath()
        bezier3Path.miterLimit = 4;

        bezier3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPointMake(483.52, 52.55))
        bezier4Path.addCurveToPoint(CGPointMake(461.89, 75.42), controlPoint1: CGPointMake(475.74, 60.82), controlPoint2: CGPointMake(468.94, 68.25))
        bezier4Path.addCurveToPoint(CGPointMake(461.3, 82.16), controlPoint1: CGPointMake(459.57, 77.77), controlPoint2: CGPointMake(459.39, 79.4))
        bezier4Path.addCurveToPoint(CGPointMake(481.06, 111.79), controlPoint1: CGPointMake(468.05, 91.92), controlPoint2: CGPointMake(474.51, 101.89))
        bezier4Path.addCurveToPoint(CGPointMake(483.99, 116.54), controlPoint1: CGPointMake(481.94, 113.11), controlPoint2: CGPointMake(482.73, 114.48))
        bezier4Path.addCurveToPoint(CGPointMake(463.93, 116.53), controlPoint1: CGPointMake(476.83, 116.54), controlPoint2: CGPointMake(470.38, 116.54))
        bezier4Path.addCurveToPoint(CGPointMake(461.07, 114.04), controlPoint1: CGPointMake(462.27, 116.53), controlPoint2: CGPointMake(461.8, 115.12))
        bezier4Path.addCurveToPoint(CGPointMake(450.13, 97.79), controlPoint1: CGPointMake(457.44, 108.61), controlPoint2: CGPointMake(453.93, 103.1))
        bezier4Path.addCurveToPoint(CGPointMake(445.92, 93.76), controlPoint1: CGPointMake(448.99, 96.2), controlPoint2: CGPointMake(448.37, 92.61))
        bezier4Path.addCurveToPoint(CGPointMake(440.89, 101.05), controlPoint1: CGPointMake(443.34, 94.96), controlPoint2: CGPointMake(440.81, 97.36))
        bezier4Path.addCurveToPoint(CGPointMake(440.95, 113.08), controlPoint1: CGPointMake(440.97, 105.06), controlPoint2: CGPointMake(440.76, 109.08))
        bezier4Path.addCurveToPoint(CGPointMake(437.44, 116.63), controlPoint1: CGPointMake(441.09, 115.79), controlPoint2: CGPointMake(440.23, 116.79))
        bezier4Path.addCurveToPoint(CGPointMake(426.31, 116.63), controlPoint1: CGPointMake(433.74, 116.41), controlPoint2: CGPointMake(430.01, 116.4))
        bezier4Path.addCurveToPoint(CGPointMake(422.88, 113.04), controlPoint1: CGPointMake(423.43, 116.82), controlPoint2: CGPointMake(422.87, 115.65))
        bezier4Path.addCurveToPoint(CGPointMake(422.88, 31.94), controlPoint1: CGPointMake(422.96, 86), controlPoint2: CGPointMake(422.97, 58.97))
        bezier4Path.addCurveToPoint(CGPointMake(426.42, 28.45), controlPoint1: CGPointMake(422.87, 29.19), controlPoint2: CGPointMake(423.71, 28.2))
        bezier4Path.addCurveToPoint(CGPointMake(440.16, 29.46), controlPoint1: CGPointMake(431.11, 28.88), controlPoint2: CGPointMake(437.11, 26.48))
        bezier4Path.addCurveToPoint(CGPointMake(440.87, 42.38), controlPoint1: CGPointMake(442.78, 32.02), controlPoint2: CGPointMake(440.83, 37.94))
        bezier4Path.addCurveToPoint(CGPointMake(440.94, 71.34), controlPoint1: CGPointMake(440.98, 52.03), controlPoint2: CGPointMake(440.92, 61.69))
        bezier4Path.addCurveToPoint(CGPointMake(441.42, 72.92), controlPoint1: CGPointMake(440.94, 71.6), controlPoint2: CGPointMake(441.09, 71.87))
        bezier4Path.addCurveToPoint(CGPointMake(455.73, 57.71), controlPoint1: CGPointMake(446.39, 67.69), controlPoint2: CGPointMake(451.37, 62.96))
        bezier4Path.addCurveToPoint(CGPointMake(467.49, 52.44), controlPoint1: CGPointMake(458.95, 53.85), controlPoint2: CGPointMake(462.33, 51.92))
        bezier4Path.addCurveToPoint(CGPointMake(483.52, 52.55), controlPoint1: CGPointMake(472.31, 52.93), controlPoint2: CGPointMake(477.22, 52.55))
        bezier4Path.closePath()
        bezier4Path.miterLimit = 4;

        bezier4Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.moveToPoint(CGPointMake(317.29, 110.39))
        bezier5Path.addCurveToPoint(CGPointMake(292.78, 116.56), controlPoint1: CGPointMake(310.35, 117.85), controlPoint2: CGPointMake(301.98, 119.21))
        bezier5Path.addCurveToPoint(CGPointMake(277.71, 90.64), controlPoint1: CGPointMake(281, 113.17), controlPoint2: CGPointMake(274.81, 102.47))
        bezier5Path.addCurveToPoint(CGPointMake(285.29, 80.63), controlPoint1: CGPointMake(278.78, 86.26), controlPoint2: CGPointMake(281.37, 82.92))
        bezier5Path.addCurveToPoint(CGPointMake(301.04, 76.46), controlPoint1: CGPointMake(290.16, 77.79), controlPoint2: CGPointMake(295.49, 76.64))
        bezier5Path.addCurveToPoint(CGPointMake(312.17, 76.4), controlPoint1: CGPointMake(304.75, 76.34), controlPoint2: CGPointMake(308.47, 76.53))
        bezier5Path.addCurveToPoint(CGPointMake(316.61, 75.56), controlPoint1: CGPointMake(313.69, 76.34), controlPoint2: CGPointMake(315.79, 77.34))
        bezier5Path.addCurveToPoint(CGPointMake(315.36, 70.13), controlPoint1: CGPointMake(317.45, 73.73), controlPoint2: CGPointMake(316.41, 71.75))
        bezier5Path.addCurveToPoint(CGPointMake(309.07, 66.42), controlPoint1: CGPointMake(313.92, 67.9), controlPoint2: CGPointMake(311.76, 66.71))
        bezier5Path.addCurveToPoint(CGPointMake(290.8, 70.76), controlPoint1: CGPointMake(302.45, 65.71), controlPoint2: CGPointMake(296.34, 67.31))
        bezier5Path.addCurveToPoint(CGPointMake(285.57, 69.54), controlPoint1: CGPointMake(288.28, 72.32), controlPoint2: CGPointMake(286.83, 72.1))
        bezier5Path.addCurveToPoint(CGPointMake(284.33, 67.69), controlPoint1: CGPointMake(285.24, 68.88), controlPoint2: CGPointMake(284.76, 68.3))
        bezier5Path.addCurveToPoint(CGPointMake(287.24, 56.35), controlPoint1: CGPointMake(279.19, 60.27), controlPoint2: CGPointMake(279.17, 60.23))
        bezier5Path.addCurveToPoint(CGPointMake(316.68, 52.49), controlPoint1: CGPointMake(296.62, 51.85), controlPoint2: CGPointMake(306.55, 50.14))
        bezier5Path.addCurveToPoint(CGPointMake(335.2, 77.4), controlPoint1: CGPointMake(328.4, 55.2), controlPoint2: CGPointMake(334.92, 60.87))
        bezier5Path.addCurveToPoint(CGPointMake(335.28, 113.49), controlPoint1: CGPointMake(335.4, 89.43), controlPoint2: CGPointMake(335.21, 101.46))
        bezier5Path.addCurveToPoint(CGPointMake(332.22, 116.61), controlPoint1: CGPointMake(335.29, 115.75), controlPoint2: CGPointMake(334.6, 116.75))
        bezier5Path.addCurveToPoint(CGPointMake(324.65, 116.58), controlPoint1: CGPointMake(329.71, 116.46), controlPoint2: CGPointMake(327.18, 116.58))
        bezier5Path.addCurveToPoint(CGPointMake(317.29, 110.39), controlPoint1: CGPointMake(318.31, 116.58), controlPoint2: CGPointMake(318.31, 116.58))
        bezier5Path.closePath()
        bezier5Path.moveToPoint(CGPointMake(304.78, 102.94))
        bezier5Path.addCurveToPoint(CGPointMake(316.79, 92.48), controlPoint1: CGPointMake(311.51, 102.93), controlPoint2: CGPointMake(316.87, 98.3))
        bezier5Path.addCurveToPoint(CGPointMake(315.52, 89.71), controlPoint1: CGPointMake(316.78, 91.42), controlPoint2: CGPointMake(317.31, 89.69))
        bezier5Path.addCurveToPoint(CGPointMake(299.23, 90.5), controlPoint1: CGPointMake(310.08, 89.76), controlPoint2: CGPointMake(304.55, 88.68))
        bezier5Path.addCurveToPoint(CGPointMake(295.33, 95.86), controlPoint1: CGPointMake(296.81, 91.32), controlPoint2: CGPointMake(295.36, 93.14))
        bezier5Path.addCurveToPoint(CGPointMake(299.18, 101.79), controlPoint1: CGPointMake(295.3, 98.69), controlPoint2: CGPointMake(296.64, 100.69))
        bezier5Path.addCurveToPoint(CGPointMake(304.78, 102.94), controlPoint1: CGPointMake(300.94, 102.55), controlPoint2: CGPointMake(302.81, 103.07))
        bezier5Path.closePath()
        bezier5Path.miterLimit = 4;

        bezier5Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.moveToPoint(CGPointMake(367.44, 58.19))
        bezier6Path.addCurveToPoint(CGPointMake(372.25, 55.41), controlPoint1: CGPointMake(369.67, 57.87), controlPoint2: CGPointMake(370.79, 56.34))
        bezier6Path.addCurveToPoint(CGPointMake(408.7, 74.22), controlPoint1: CGPointMake(387.89, 45.47), controlPoint2: CGPointMake(408.1, 55.74))
        bezier6Path.addCurveToPoint(CGPointMake(408.85, 113.42), controlPoint1: CGPointMake(409.12, 87.28), controlPoint2: CGPointMake(408.73, 100.36))
        bezier6Path.addCurveToPoint(CGPointMake(405.44, 116.61), controlPoint1: CGPointMake(408.87, 116.07), controlPoint2: CGPointMake(407.84, 116.71))
        bezier6Path.addCurveToPoint(CGPointMake(394.31, 116.63), controlPoint1: CGPointMake(401.74, 116.47), controlPoint2: CGPointMake(398.01, 116.41))
        bezier6Path.addCurveToPoint(CGPointMake(390.91, 112.95), controlPoint1: CGPointMake(391.39, 116.8), controlPoint2: CGPointMake(390.88, 115.5))
        bezier6Path.addCurveToPoint(CGPointMake(390.95, 83.55), controlPoint1: CGPointMake(391.02, 103.15), controlPoint2: CGPointMake(390.96, 93.35))
        bezier6Path.addCurveToPoint(CGPointMake(390.81, 77.76), controlPoint1: CGPointMake(390.95, 81.62), controlPoint2: CGPointMake(390.95, 79.68))
        bezier6Path.addCurveToPoint(CGPointMake(380.55, 66.21), controlPoint1: CGPointMake(390.26, 70.22), controlPoint2: CGPointMake(386.76, 66.32))
        bezier6Path.addCurveToPoint(CGPointMake(367.58, 77.62), controlPoint1: CGPointMake(373.62, 66.09), controlPoint2: CGPointMake(368.13, 70.66))
        bezier6Path.addCurveToPoint(CGPointMake(367.35, 94.09), controlPoint1: CGPointMake(367.14, 83.08), controlPoint2: CGPointMake(367.37, 88.59))
        bezier6Path.addCurveToPoint(CGPointMake(367.39, 113.24), controlPoint1: CGPointMake(367.33, 100.47), controlPoint2: CGPointMake(367.26, 106.86))
        bezier6Path.addCurveToPoint(CGPointMake(364.12, 116.62), controlPoint1: CGPointMake(367.43, 115.68), controlPoint2: CGPointMake(366.74, 116.74))
        bezier6Path.addCurveToPoint(CGPointMake(352.1, 116.61), controlPoint1: CGPointMake(360.12, 116.44), controlPoint2: CGPointMake(356.1, 116.48))
        bezier6Path.addCurveToPoint(CGPointMake(349.01, 113.54), controlPoint1: CGPointMake(349.8, 116.68), controlPoint2: CGPointMake(349, 115.88))
        bezier6Path.addCurveToPoint(CGPointMake(349.01, 55.63), controlPoint1: CGPointMake(349.08, 94.24), controlPoint2: CGPointMake(349.07, 74.93))
        bezier6Path.addCurveToPoint(CGPointMake(352.06, 52.52), controlPoint1: CGPointMake(349, 53.34), controlPoint2: CGPointMake(349.72, 52.4))
        bezier6Path.addCurveToPoint(CGPointMake(360.97, 52.5), controlPoint1: CGPointMake(355.02, 52.66), controlPoint2: CGPointMake(358.02, 52.76))
        bezier6Path.addCurveToPoint(CGPointMake(367.44, 58.19), controlPoint1: CGPointMake(365.22, 52.11), controlPoint2: CGPointMake(368.48, 52.56))
        bezier6Path.closePath()
        bezier6Path.miterLimit = 4;

        bezier6Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.moveToPoint(CGPointMake(44.1, 94.61))
        bezier7Path.addCurveToPoint(CGPointMake(44.16, 127.59), controlPoint1: CGPointMake(44.1, 105.6), controlPoint2: CGPointMake(44.01, 116.6))
        bezier7Path.addCurveToPoint(CGPointMake(40.31, 131.69), controlPoint1: CGPointMake(44.2, 130.55), controlPoint2: CGPointMake(43.59, 131.76))
        bezier7Path.addCurveToPoint(CGPointMake(12.67, 131.67), controlPoint1: CGPointMake(31.1, 131.47), controlPoint2: CGPointMake(21.88, 131.52))
        bezier7Path.addCurveToPoint(CGPointMake(9.13, 128.21), controlPoint1: CGPointMake(9.99, 131.71), controlPoint2: CGPointMake(9.11, 131.02))
        bezier7Path.addCurveToPoint(CGPointMake(9.12, 61.34), controlPoint1: CGPointMake(9.24, 105.92), controlPoint2: CGPointMake(9.25, 83.63))
        bezier7Path.addCurveToPoint(CGPointMake(12.94, 57.66), controlPoint1: CGPointMake(9.11, 58.32), controlPoint2: CGPointMake(10.12, 57.61))
        bezier7Path.addCurveToPoint(CGPointMake(40.13, 57.65), controlPoint1: CGPointMake(22.01, 57.81), controlPoint2: CGPointMake(31.07, 57.83))
        bezier7Path.addCurveToPoint(CGPointMake(44.17, 61.62), controlPoint1: CGPointMake(43.22, 57.58), controlPoint2: CGPointMake(44.22, 58.46))
        bezier7Path.addCurveToPoint(CGPointMake(44.1, 94.61), controlPoint1: CGPointMake(43.99, 72.61), controlPoint2: CGPointMake(44.1, 83.61))
        bezier7Path.closePath()
        bezier7Path.miterLimit = 4;

        bezier7Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.moveToPoint(CGPointMake(514.78, 75.45))
        bezier8Path.addCurveToPoint(CGPointMake(514.84, 112.87), controlPoint1: CGPointMake(514.78, 87.92), controlPoint2: CGPointMake(514.71, 100.39))
        bezier8Path.addCurveToPoint(CGPointMake(511.25, 116.66), controlPoint1: CGPointMake(514.87, 115.62), controlPoint2: CGPointMake(514.34, 116.87))
        bezier8Path.addCurveToPoint(CGPointMake(498.78, 116.63), controlPoint1: CGPointMake(507.1, 116.38), controlPoint2: CGPointMake(502.93, 116.49))
        bezier8Path.addCurveToPoint(CGPointMake(496.02, 113.84), controlPoint1: CGPointMake(496.63, 116.7), controlPoint2: CGPointMake(496.01, 115.95))
        bezier8Path.addCurveToPoint(CGPointMake(496, 36.32), controlPoint1: CGPointMake(496.08, 88), controlPoint2: CGPointMake(496.09, 62.16))
        bezier8Path.addCurveToPoint(CGPointMake(499.14, 33.48), controlPoint1: CGPointMake(495.99, 33.78), controlPoint2: CGPointMake(497.01, 33.41))
        bezier8Path.addCurveToPoint(CGPointMake(511.17, 33.45), controlPoint1: CGPointMake(503.15, 33.61), controlPoint2: CGPointMake(507.17, 33.7))
        bezier8Path.addCurveToPoint(CGPointMake(514.85, 37.13), controlPoint1: CGPointMake(514.1, 33.27), controlPoint2: CGPointMake(514.89, 34.22))
        bezier8Path.addCurveToPoint(CGPointMake(514.78, 75.45), controlPoint1: CGPointMake(514.69, 49.9), controlPoint2: CGPointMake(514.78, 62.67))
        bezier8Path.closePath()
        bezier8Path.miterLimit = 4;

        bezier8Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.moveToPoint(CGPointMake(26.66, 47.92))
        bezier9Path.addCurveToPoint(CGPointMake(6, 27.47), controlPoint1: CGPointMake(15.02, 47.92), controlPoint2: CGPointMake(5.87, 38.87))
        bezier9Path.addCurveToPoint(CGPointMake(26.67, 6.89), controlPoint1: CGPointMake(6.14, 15.86), controlPoint2: CGPointMake(15.15, 6.88))
        bezier9Path.addCurveToPoint(CGPointMake(47.23, 27.46), controlPoint1: CGPointMake(38.27, 6.89), controlPoint2: CGPointMake(47.25, 15.88))
        bezier9Path.addCurveToPoint(CGPointMake(26.66, 47.92), controlPoint1: CGPointMake(47.21, 39.19), controlPoint2: CGPointMake(38.44, 47.91))
        bezier9Path.closePath()
        bezier9Path.miterLimit = 4;

        bezier9Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier9Path.fill()
    }

    public class func drawProjectCellBackground(highlighted highlighted: Bool = false) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let color3 = UIColor(red: 0.910, green: 0.910, blue: 0.910, alpha: 1.000)
        let color10 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.blackColor().colorWithAlphaComponent(0.3)
        shadow.shadowOffset = CGSizeMake(0.1, -0.1)
        shadow.shadowBlurRadius = 2

        //// Variable Declarations
        let isNormalStateVisible = !highlighted

        if (isNormalStateVisible) {
            //// normalState Drawing
            let normalStatePath = UIBezierPath(rect: CGRectMake(5, 5, 40, 20))
            CGContextSaveGState(context)
            CGContextSetShadowWithColor(context, shadow.shadowOffset, shadow.shadowBlurRadius, (shadow.shadowColor as! UIColor).CGColor)
            color10.setFill()
            normalStatePath.fill()
            CGContextRestoreGState(context)

        }


        if (highlighted) {
            //// highlightFill Drawing
            let highlightFillPath = UIBezierPath(rect: CGRectMake(5, 5, 40, 20))
            color3.setFill()
            highlightFillPath.fill()
        }
    }

    public class func drawBottomSocialButtonBackground() {
        //// Color Declarations
        let color10 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let color = color10.colorWithBrightness(1)

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRectMake(4, 9, 26, 26))
        color.setFill()
        ovalPath.fill()
    }

    public class func drawDetailsButtonBackground() {
        //// Color Declarations
        let color4 = CivilbudgetStyleKit.themeLightBlue

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(roundedRect: CGRectMake(0, 0, 60, 20), cornerRadius: 6)
        color4.setFill()
        rectanglePath.fill()
    }

    public class func drawSupportButtonBackground(supported supported: Bool = true) {
        //// Color Declarations
        let color10 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let color = color10.colorWithBrightness(1)
        let color2 = color
        let color7 = CivilbudgetStyleKit.themeDarkBlue

        //// Variable Declarations
        let notSupported = !supported

        if (notSupported) {
            //// Rectangle Drawing
            let rectanglePath = UIBezierPath()
            rectanglePath.moveToPoint(CGPointMake(9.17, 0))
            rectanglePath.addLineToPoint(CGPointMake(50.83, 0))
            rectanglePath.addCurveToPoint(CGPointMake(55.98, 0.39), controlPoint1: CGPointMake(53.47, 0), controlPoint2: CGPointMake(54.79, 0))
            rectanglePath.addLineToPoint(CGPointMake(56.21, 0.45))
            rectanglePath.addCurveToPoint(CGPointMake(59.55, 3.79), controlPoint1: CGPointMake(57.76, 1.01), controlPoint2: CGPointMake(58.99, 2.24))
            rectanglePath.addCurveToPoint(CGPointMake(60, 9.17), controlPoint1: CGPointMake(60, 5.21), controlPoint2: CGPointMake(60, 6.53))
            rectanglePath.addLineToPoint(CGPointMake(60, 10.83))
            rectanglePath.addCurveToPoint(CGPointMake(59.61, 15.98), controlPoint1: CGPointMake(60, 13.47), controlPoint2: CGPointMake(60, 14.79))
            rectanglePath.addLineToPoint(CGPointMake(59.55, 16.21))
            rectanglePath.addCurveToPoint(CGPointMake(56.21, 19.55), controlPoint1: CGPointMake(58.99, 17.76), controlPoint2: CGPointMake(57.76, 18.99))
            rectanglePath.addCurveToPoint(CGPointMake(50.83, 20), controlPoint1: CGPointMake(54.79, 20), controlPoint2: CGPointMake(53.47, 20))
            rectanglePath.addLineToPoint(CGPointMake(9.17, 20))
            rectanglePath.addCurveToPoint(CGPointMake(4.02, 19.61), controlPoint1: CGPointMake(6.53, 20), controlPoint2: CGPointMake(5.21, 20))
            rectanglePath.addLineToPoint(CGPointMake(3.79, 19.55))
            rectanglePath.addCurveToPoint(CGPointMake(0.45, 16.21), controlPoint1: CGPointMake(2.24, 18.99), controlPoint2: CGPointMake(1.01, 17.76))
            rectanglePath.addCurveToPoint(CGPointMake(0, 10.83), controlPoint1: CGPointMake(0, 14.79), controlPoint2: CGPointMake(0, 13.47))
            rectanglePath.addLineToPoint(CGPointMake(0, 9.17))
            rectanglePath.addCurveToPoint(CGPointMake(0.39, 4.02), controlPoint1: CGPointMake(0, 6.53), controlPoint2: CGPointMake(0, 5.21))
            rectanglePath.addLineToPoint(CGPointMake(0.45, 3.79))
            rectanglePath.addCurveToPoint(CGPointMake(3.79, 0.45), controlPoint1: CGPointMake(1.01, 2.24), controlPoint2: CGPointMake(2.24, 1.01))
            rectanglePath.addCurveToPoint(CGPointMake(9.17, 0), controlPoint1: CGPointMake(5.21, 0), controlPoint2: CGPointMake(6.53, 0))
            rectanglePath.closePath()
            color2.setFill()
            rectanglePath.fill()
        }


        if (supported) {
            //// Rectangle 2 Drawing
            let rectangle2Path = UIBezierPath()
            rectangle2Path.moveToPoint(CGPointMake(9.17, 0))
            rectangle2Path.addLineToPoint(CGPointMake(50.83, 0))
            rectangle2Path.addCurveToPoint(CGPointMake(55.98, 0.39), controlPoint1: CGPointMake(53.47, 0), controlPoint2: CGPointMake(54.79, 0))
            rectangle2Path.addLineToPoint(CGPointMake(56.21, 0.45))
            rectangle2Path.addCurveToPoint(CGPointMake(59.55, 3.79), controlPoint1: CGPointMake(57.76, 1.01), controlPoint2: CGPointMake(58.99, 2.24))
            rectangle2Path.addCurveToPoint(CGPointMake(60, 9.17), controlPoint1: CGPointMake(60, 5.21), controlPoint2: CGPointMake(60, 6.53))
            rectangle2Path.addLineToPoint(CGPointMake(60, 10.83))
            rectangle2Path.addCurveToPoint(CGPointMake(59.61, 15.98), controlPoint1: CGPointMake(60, 13.47), controlPoint2: CGPointMake(60, 14.79))
            rectangle2Path.addLineToPoint(CGPointMake(59.55, 16.21))
            rectangle2Path.addCurveToPoint(CGPointMake(56.21, 19.55), controlPoint1: CGPointMake(58.99, 17.76), controlPoint2: CGPointMake(57.76, 18.99))
            rectangle2Path.addCurveToPoint(CGPointMake(50.83, 20), controlPoint1: CGPointMake(54.79, 20), controlPoint2: CGPointMake(53.47, 20))
            rectangle2Path.addLineToPoint(CGPointMake(9.17, 20))
            rectangle2Path.addCurveToPoint(CGPointMake(4.02, 19.61), controlPoint1: CGPointMake(6.53, 20), controlPoint2: CGPointMake(5.21, 20))
            rectangle2Path.addLineToPoint(CGPointMake(3.79, 19.55))
            rectangle2Path.addCurveToPoint(CGPointMake(0.45, 16.21), controlPoint1: CGPointMake(2.24, 18.99), controlPoint2: CGPointMake(1.01, 17.76))
            rectangle2Path.addCurveToPoint(CGPointMake(0, 10.83), controlPoint1: CGPointMake(0, 14.79), controlPoint2: CGPointMake(0, 13.47))
            rectangle2Path.addLineToPoint(CGPointMake(0, 9.17))
            rectangle2Path.addCurveToPoint(CGPointMake(0.39, 4.02), controlPoint1: CGPointMake(0, 6.53), controlPoint2: CGPointMake(0, 5.21))
            rectangle2Path.addLineToPoint(CGPointMake(0.45, 3.79))
            rectangle2Path.addCurveToPoint(CGPointMake(3.79, 0.45), controlPoint1: CGPointMake(1.01, 2.24), controlPoint2: CGPointMake(2.24, 1.01))
            rectangle2Path.addCurveToPoint(CGPointMake(9.17, 0), controlPoint1: CGPointMake(5.21, 0), controlPoint2: CGPointMake(6.53, 0))
            rectangle2Path.closePath()
            color7.setFill()
            rectangle2Path.fill()
        }
    }

    public class func drawUserProfileImagePlaceholder() {
        //// Color Declarations
        let color10 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let color5 = color10.colorWithAlpha(0.3)
        let fillColor5 = CivilbudgetStyleKit.themeDarkBlue

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRectMake(5, 5, 30, 30))
        color5.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalInRect: CGRectMake(7, 7, 26, 26))
        color10.setFill()
        oval2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(33, 20))
        bezierPath.addCurveToPoint(CGPointMake(20, 7), controlPoint1: CGPointMake(33, 12.83), controlPoint2: CGPointMake(27.17, 7))
        bezierPath.addCurveToPoint(CGPointMake(11, 10.62), controlPoint1: CGPointMake(16.63, 7), controlPoint2: CGPointMake(13.43, 8.29))
        bezierPath.addCurveToPoint(CGPointMake(10.98, 11.71), controlPoint1: CGPointMake(10.69, 10.91), controlPoint2: CGPointMake(10.68, 11.4))
        bezierPath.addCurveToPoint(CGPointMake(12.07, 11.73), controlPoint1: CGPointMake(11.27, 12.01), controlPoint2: CGPointMake(11.76, 12.02))
        bezierPath.addCurveToPoint(CGPointMake(20, 8.54), controlPoint1: CGPointMake(14.21, 9.67), controlPoint2: CGPointMake(17.03, 8.54))
        bezierPath.addCurveToPoint(CGPointMake(31.46, 20), controlPoint1: CGPointMake(26.32, 8.54), controlPoint2: CGPointMake(31.46, 13.68))
        bezierPath.addCurveToPoint(CGPointMake(28.45, 27.74), controlPoint1: CGPointMake(31.46, 22.87), controlPoint2: CGPointMake(30.39, 25.62))
        bezierPath.addCurveToPoint(CGPointMake(20, 31.46), controlPoint1: CGPointMake(26.28, 30.1), controlPoint2: CGPointMake(23.2, 31.46))
        bezierPath.addCurveToPoint(CGPointMake(11.82, 28.02), controlPoint1: CGPointMake(16.93, 31.46), controlPoint2: CGPointMake(13.97, 30.21))
        bezierPath.addCurveToPoint(CGPointMake(11.86, 27.86), controlPoint1: CGPointMake(11.83, 27.97), controlPoint2: CGPointMake(11.85, 27.91))
        bezierPath.addCurveToPoint(CGPointMake(11.89, 27.73), controlPoint1: CGPointMake(11.87, 27.82), controlPoint2: CGPointMake(11.88, 27.77))
        bezierPath.addCurveToPoint(CGPointMake(11.95, 27.53), controlPoint1: CGPointMake(11.91, 27.66), controlPoint2: CGPointMake(11.93, 27.6))
        bezierPath.addCurveToPoint(CGPointMake(11.99, 27.42), controlPoint1: CGPointMake(11.96, 27.49), controlPoint2: CGPointMake(11.97, 27.46))
        bezierPath.addCurveToPoint(CGPointMake(12.06, 27.2), controlPoint1: CGPointMake(12.01, 27.34), controlPoint2: CGPointMake(12.04, 27.27))
        bezierPath.addCurveToPoint(CGPointMake(12.09, 27.11), controlPoint1: CGPointMake(12.07, 27.17), controlPoint2: CGPointMake(12.08, 27.14))
        bezierPath.addCurveToPoint(CGPointMake(12.34, 26.52), controlPoint1: CGPointMake(12.17, 26.91), controlPoint2: CGPointMake(12.25, 26.71))
        bezierPath.addCurveToPoint(CGPointMake(12.38, 26.44), controlPoint1: CGPointMake(12.36, 26.49), controlPoint2: CGPointMake(12.37, 26.47))
        bezierPath.addCurveToPoint(CGPointMake(12.48, 26.24), controlPoint1: CGPointMake(12.42, 26.37), controlPoint2: CGPointMake(12.45, 26.3))
        bezierPath.addCurveToPoint(CGPointMake(12.54, 26.13), controlPoint1: CGPointMake(12.5, 26.2), controlPoint2: CGPointMake(12.52, 26.17))
        bezierPath.addCurveToPoint(CGPointMake(12.64, 25.96), controlPoint1: CGPointMake(12.57, 26.08), controlPoint2: CGPointMake(12.6, 26.02))
        bezierPath.addCurveToPoint(CGPointMake(12.7, 25.85), controlPoint1: CGPointMake(12.66, 25.92), controlPoint2: CGPointMake(12.68, 25.89))
        bezierPath.addCurveToPoint(CGPointMake(12.8, 25.69), controlPoint1: CGPointMake(12.74, 25.8), controlPoint2: CGPointMake(12.77, 25.74))
        bezierPath.addCurveToPoint(CGPointMake(12.88, 25.58), controlPoint1: CGPointMake(12.83, 25.65), controlPoint2: CGPointMake(12.85, 25.62))
        bezierPath.addCurveToPoint(CGPointMake(12.98, 25.43), controlPoint1: CGPointMake(12.91, 25.53), controlPoint2: CGPointMake(12.94, 25.48))
        bezierPath.addCurveToPoint(CGPointMake(13.06, 25.32), controlPoint1: CGPointMake(13, 25.39), controlPoint2: CGPointMake(13.03, 25.36))
        bezierPath.addCurveToPoint(CGPointMake(13.16, 25.18), controlPoint1: CGPointMake(13.09, 25.27), controlPoint2: CGPointMake(13.13, 25.23))
        bezierPath.addCurveToPoint(CGPointMake(13.25, 25.07), controlPoint1: CGPointMake(13.19, 25.14), controlPoint2: CGPointMake(13.22, 25.11))
        bezierPath.addCurveToPoint(CGPointMake(13.36, 24.93), controlPoint1: CGPointMake(13.29, 25.02), controlPoint2: CGPointMake(13.32, 24.98))
        bezierPath.addCurveToPoint(CGPointMake(13.45, 24.83), controlPoint1: CGPointMake(13.39, 24.9), controlPoint2: CGPointMake(13.42, 24.86))
        bezierPath.addCurveToPoint(CGPointMake(13.57, 24.7), controlPoint1: CGPointMake(13.49, 24.78), controlPoint2: CGPointMake(13.53, 24.74))
        bezierPath.addCurveToPoint(CGPointMake(13.66, 24.6), controlPoint1: CGPointMake(13.6, 24.66), controlPoint2: CGPointMake(13.63, 24.63))
        bezierPath.addCurveToPoint(CGPointMake(13.78, 24.47), controlPoint1: CGPointMake(13.7, 24.55), controlPoint2: CGPointMake(13.74, 24.51))
        bezierPath.addCurveToPoint(CGPointMake(13.88, 24.37), controlPoint1: CGPointMake(13.82, 24.44), controlPoint2: CGPointMake(13.85, 24.41))
        bezierPath.addCurveToPoint(CGPointMake(14.01, 24.26), controlPoint1: CGPointMake(13.92, 24.33), controlPoint2: CGPointMake(13.97, 24.29))
        bezierPath.addCurveToPoint(CGPointMake(14.11, 24.16), controlPoint1: CGPointMake(14.04, 24.22), controlPoint2: CGPointMake(14.08, 24.19))
        bezierPath.addCurveToPoint(CGPointMake(14.24, 24.05), controlPoint1: CGPointMake(14.16, 24.12), controlPoint2: CGPointMake(14.2, 24.09))
        bezierPath.addCurveToPoint(CGPointMake(14.35, 23.96), controlPoint1: CGPointMake(14.28, 24.02), controlPoint2: CGPointMake(14.31, 23.99))
        bezierPath.addCurveToPoint(CGPointMake(14.48, 23.85), controlPoint1: CGPointMake(14.39, 23.92), controlPoint2: CGPointMake(14.44, 23.89))
        bezierPath.addCurveToPoint(CGPointMake(14.6, 23.77), controlPoint1: CGPointMake(14.52, 23.82), controlPoint2: CGPointMake(14.56, 23.79))
        bezierPath.addCurveToPoint(CGPointMake(14.73, 23.67), controlPoint1: CGPointMake(14.64, 23.73), controlPoint2: CGPointMake(14.69, 23.7))
        bezierPath.addCurveToPoint(CGPointMake(14.85, 23.58), controlPoint1: CGPointMake(14.77, 23.64), controlPoint2: CGPointMake(14.81, 23.61))
        bezierPath.addCurveToPoint(CGPointMake(14.99, 23.49), controlPoint1: CGPointMake(14.9, 23.55), controlPoint2: CGPointMake(14.94, 23.52))
        bezierPath.addCurveToPoint(CGPointMake(15.11, 23.41), controlPoint1: CGPointMake(15.03, 23.46), controlPoint2: CGPointMake(15.07, 23.44))
        bezierPath.addCurveToPoint(CGPointMake(15.26, 23.32), controlPoint1: CGPointMake(15.16, 23.38), controlPoint2: CGPointMake(15.21, 23.35))
        bezierPath.addCurveToPoint(CGPointMake(15.38, 23.25), controlPoint1: CGPointMake(15.3, 23.3), controlPoint2: CGPointMake(15.34, 23.27))
        bezierPath.addCurveToPoint(CGPointMake(15.53, 23.17), controlPoint1: CGPointMake(15.43, 23.22), controlPoint2: CGPointMake(15.48, 23.2))
        bezierPath.addCurveToPoint(CGPointMake(15.66, 23.1), controlPoint1: CGPointMake(15.57, 23.15), controlPoint2: CGPointMake(15.61, 23.12))
        bezierPath.addCurveToPoint(CGPointMake(15.81, 23.03), controlPoint1: CGPointMake(15.71, 23.08), controlPoint2: CGPointMake(15.76, 23.05))
        bezierPath.addCurveToPoint(CGPointMake(15.94, 22.96), controlPoint1: CGPointMake(15.85, 23.01), controlPoint2: CGPointMake(15.89, 22.98))
        bezierPath.addCurveToPoint(CGPointMake(16.09, 22.9), controlPoint1: CGPointMake(15.99, 22.94), controlPoint2: CGPointMake(16.04, 22.92))
        bezierPath.addCurveToPoint(CGPointMake(16.23, 22.84), controlPoint1: CGPointMake(16.14, 22.88), controlPoint2: CGPointMake(16.18, 22.86))
        bezierPath.addCurveToPoint(CGPointMake(16.39, 22.78), controlPoint1: CGPointMake(16.28, 22.82), controlPoint2: CGPointMake(16.33, 22.8))
        bezierPath.addCurveToPoint(CGPointMake(16.52, 22.72), controlPoint1: CGPointMake(16.43, 22.76), controlPoint2: CGPointMake(16.48, 22.74))
        bezierPath.addCurveToPoint(CGPointMake(16.68, 22.67), controlPoint1: CGPointMake(16.58, 22.7), controlPoint2: CGPointMake(16.63, 22.69))
        bezierPath.addCurveToPoint(CGPointMake(16.82, 22.62), controlPoint1: CGPointMake(16.73, 22.65), controlPoint2: CGPointMake(16.78, 22.64))
        bezierPath.addCurveToPoint(CGPointMake(16.99, 22.57), controlPoint1: CGPointMake(16.88, 22.61), controlPoint2: CGPointMake(16.93, 22.59))
        bezierPath.addCurveToPoint(CGPointMake(17.13, 22.53), controlPoint1: CGPointMake(17.03, 22.56), controlPoint2: CGPointMake(17.08, 22.55))
        bezierPath.addCurveToPoint(CGPointMake(17.3, 22.49), controlPoint1: CGPointMake(17.18, 22.52), controlPoint2: CGPointMake(17.24, 22.51))
        bezierPath.addCurveToPoint(CGPointMake(17.44, 22.46), controlPoint1: CGPointMake(17.34, 22.48), controlPoint2: CGPointMake(17.39, 22.47))
        bezierPath.addCurveToPoint(CGPointMake(17.61, 22.42), controlPoint1: CGPointMake(17.5, 22.45), controlPoint2: CGPointMake(17.55, 22.43))
        bezierPath.addCurveToPoint(CGPointMake(17.75, 22.4), controlPoint1: CGPointMake(17.66, 22.41), controlPoint2: CGPointMake(17.71, 22.4))
        bezierPath.addCurveToPoint(CGPointMake(17.94, 22.37), controlPoint1: CGPointMake(17.81, 22.38), controlPoint2: CGPointMake(17.87, 22.38))
        bezierPath.addCurveToPoint(CGPointMake(18.07, 22.35), controlPoint1: CGPointMake(17.98, 22.36), controlPoint2: CGPointMake(18.03, 22.35))
        bezierPath.addCurveToPoint(CGPointMake(18.27, 22.32), controlPoint1: CGPointMake(18.14, 22.34), controlPoint2: CGPointMake(18.2, 22.33))
        bezierPath.addCurveToPoint(CGPointMake(18.39, 22.31), controlPoint1: CGPointMake(18.31, 22.32), controlPoint2: CGPointMake(18.35, 22.31))
        bezierPath.addCurveToPoint(CGPointMake(18.61, 22.3), controlPoint1: CGPointMake(18.47, 22.3), controlPoint2: CGPointMake(18.54, 22.3))
        bezierPath.addCurveToPoint(CGPointMake(18.72, 22.29), controlPoint1: CGPointMake(18.65, 22.29), controlPoint2: CGPointMake(18.69, 22.29))
        bezierPath.addCurveToPoint(CGPointMake(19.05, 22.28), controlPoint1: CGPointMake(18.83, 22.28), controlPoint2: CGPointMake(18.94, 22.28))
        bezierPath.addLineToPoint(CGPointMake(20.95, 22.28))
        bezierPath.addCurveToPoint(CGPointMake(26.68, 24.99), controlPoint1: CGPointMake(23.17, 22.28), controlPoint2: CGPointMake(25.26, 23.27))
        bezierPath.addCurveToPoint(CGPointMake(27.77, 25.09), controlPoint1: CGPointMake(26.95, 25.32), controlPoint2: CGPointMake(27.44, 25.36))
        bezierPath.addCurveToPoint(CGPointMake(27.87, 24.01), controlPoint1: CGPointMake(28.09, 24.82), controlPoint2: CGPointMake(28.14, 24.34))
        bezierPath.addCurveToPoint(CGPointMake(23.26, 21.04), controlPoint1: CGPointMake(26.66, 22.54), controlPoint2: CGPointMake(25.05, 21.52))
        bezierPath.addCurveToPoint(CGPointMake(24.92, 17.36), controlPoint1: CGPointMake(24.28, 20.14), controlPoint2: CGPointMake(24.92, 18.82))
        bezierPath.addCurveToPoint(CGPointMake(20, 12.44), controlPoint1: CGPointMake(24.92, 14.65), controlPoint2: CGPointMake(22.71, 12.44))
        bezierPath.addCurveToPoint(CGPointMake(15.08, 17.36), controlPoint1: CGPointMake(17.29, 12.44), controlPoint2: CGPointMake(15.08, 14.65))
        bezierPath.addCurveToPoint(CGPointMake(16.74, 21.04), controlPoint1: CGPointMake(15.08, 18.82), controlPoint2: CGPointMake(15.72, 20.14))
        bezierPath.addCurveToPoint(CGPointMake(16.66, 21.06), controlPoint1: CGPointMake(16.72, 21.05), controlPoint2: CGPointMake(16.69, 21.06))
        bezierPath.addCurveToPoint(CGPointMake(16.35, 21.16), controlPoint1: CGPointMake(16.56, 21.09), controlPoint2: CGPointMake(16.45, 21.12))
        bezierPath.addCurveToPoint(CGPointMake(16.31, 21.17), controlPoint1: CGPointMake(16.34, 21.16), controlPoint2: CGPointMake(16.32, 21.16))
        bezierPath.addCurveToPoint(CGPointMake(15.96, 21.29), controlPoint1: CGPointMake(16.19, 21.2), controlPoint2: CGPointMake(16.08, 21.24))
        bezierPath.addCurveToPoint(CGPointMake(15.86, 21.33), controlPoint1: CGPointMake(15.93, 21.3), controlPoint2: CGPointMake(15.89, 21.31))
        bezierPath.addCurveToPoint(CGPointMake(15.62, 21.42), controlPoint1: CGPointMake(15.78, 21.36), controlPoint2: CGPointMake(15.7, 21.39))
        bezierPath.addCurveToPoint(CGPointMake(15.5, 21.47), controlPoint1: CGPointMake(15.58, 21.44), controlPoint2: CGPointMake(15.54, 21.46))
        bezierPath.addCurveToPoint(CGPointMake(15.29, 21.57), controlPoint1: CGPointMake(15.43, 21.5), controlPoint2: CGPointMake(15.36, 21.53))
        bezierPath.addCurveToPoint(CGPointMake(15.15, 21.63), controlPoint1: CGPointMake(15.24, 21.59), controlPoint2: CGPointMake(15.2, 21.61))
        bezierPath.addCurveToPoint(CGPointMake(14.96, 21.73), controlPoint1: CGPointMake(15.09, 21.66), controlPoint2: CGPointMake(15.02, 21.69))
        bezierPath.addCurveToPoint(CGPointMake(14.83, 21.8), controlPoint1: CGPointMake(14.91, 21.75), controlPoint2: CGPointMake(14.87, 21.77))
        bezierPath.addCurveToPoint(CGPointMake(14.63, 21.9), controlPoint1: CGPointMake(14.76, 21.83), controlPoint2: CGPointMake(14.7, 21.87))
        bezierPath.addCurveToPoint(CGPointMake(14.51, 21.97), controlPoint1: CGPointMake(14.59, 21.93), controlPoint2: CGPointMake(14.55, 21.95))
        bezierPath.addCurveToPoint(CGPointMake(14.31, 22.1), controlPoint1: CGPointMake(14.44, 22.01), controlPoint2: CGPointMake(14.37, 22.06))
        bezierPath.addCurveToPoint(CGPointMake(14.2, 22.16), controlPoint1: CGPointMake(14.27, 22.12), controlPoint2: CGPointMake(14.23, 22.14))
        bezierPath.addCurveToPoint(CGPointMake(13.95, 22.33), controlPoint1: CGPointMake(14.12, 22.22), controlPoint2: CGPointMake(14.04, 22.27))
        bezierPath.addCurveToPoint(CGPointMake(13.9, 22.37), controlPoint1: CGPointMake(13.94, 22.34), controlPoint2: CGPointMake(13.92, 22.35))
        bezierPath.addCurveToPoint(CGPointMake(13.61, 22.58), controlPoint1: CGPointMake(13.8, 22.44), controlPoint2: CGPointMake(13.7, 22.51))
        bezierPath.addCurveToPoint(CGPointMake(13.53, 22.64), controlPoint1: CGPointMake(13.58, 22.6), controlPoint2: CGPointMake(13.55, 22.62))
        bezierPath.addCurveToPoint(CGPointMake(13.32, 22.81), controlPoint1: CGPointMake(13.46, 22.7), controlPoint2: CGPointMake(13.39, 22.75))
        bezierPath.addCurveToPoint(CGPointMake(13.22, 22.89), controlPoint1: CGPointMake(13.29, 22.83), controlPoint2: CGPointMake(13.26, 22.86))
        bezierPath.addCurveToPoint(CGPointMake(13.05, 23.04), controlPoint1: CGPointMake(13.16, 22.94), controlPoint2: CGPointMake(13.11, 22.99))
        bezierPath.addCurveToPoint(CGPointMake(12.94, 23.14), controlPoint1: CGPointMake(13.01, 23.08), controlPoint2: CGPointMake(12.98, 23.11))
        bezierPath.addCurveToPoint(CGPointMake(12.78, 23.29), controlPoint1: CGPointMake(12.89, 23.19), controlPoint2: CGPointMake(12.84, 23.24))
        bezierPath.addCurveToPoint(CGPointMake(12.68, 23.4), controlPoint1: CGPointMake(12.75, 23.33), controlPoint2: CGPointMake(12.71, 23.36))
        bezierPath.addCurveToPoint(CGPointMake(12.53, 23.55), controlPoint1: CGPointMake(12.63, 23.45), controlPoint2: CGPointMake(12.58, 23.5))
        bezierPath.addCurveToPoint(CGPointMake(12.43, 23.66), controlPoint1: CGPointMake(12.49, 23.59), controlPoint2: CGPointMake(12.46, 23.62))
        bezierPath.addCurveToPoint(CGPointMake(12.28, 23.83), controlPoint1: CGPointMake(12.38, 23.72), controlPoint2: CGPointMake(12.33, 23.77))
        bezierPath.addCurveToPoint(CGPointMake(12.19, 23.93), controlPoint1: CGPointMake(12.25, 23.87), controlPoint2: CGPointMake(12.22, 23.9))
        bezierPath.addCurveToPoint(CGPointMake(12.01, 24.15), controlPoint1: CGPointMake(12.13, 24), controlPoint2: CGPointMake(12.07, 24.08))
        bezierPath.addCurveToPoint(CGPointMake(11.96, 24.21), controlPoint1: CGPointMake(12, 24.17), controlPoint2: CGPointMake(11.98, 24.19))
        bezierPath.addCurveToPoint(CGPointMake(11.74, 24.51), controlPoint1: CGPointMake(11.89, 24.31), controlPoint2: CGPointMake(11.81, 24.41))
        bezierPath.addCurveToPoint(CGPointMake(11.69, 24.59), controlPoint1: CGPointMake(11.73, 24.53), controlPoint2: CGPointMake(11.71, 24.56))
        bezierPath.addCurveToPoint(CGPointMake(11.54, 24.81), controlPoint1: CGPointMake(11.64, 24.66), controlPoint2: CGPointMake(11.59, 24.73))
        bezierPath.addCurveToPoint(CGPointMake(11.47, 24.92), controlPoint1: CGPointMake(11.51, 24.85), controlPoint2: CGPointMake(11.49, 24.88))
        bezierPath.addCurveToPoint(CGPointMake(11.35, 25.12), controlPoint1: CGPointMake(11.43, 24.99), controlPoint2: CGPointMake(11.39, 25.05))
        bezierPath.addCurveToPoint(CGPointMake(11.27, 25.25), controlPoint1: CGPointMake(11.32, 25.16), controlPoint2: CGPointMake(11.3, 25.2))
        bezierPath.addCurveToPoint(CGPointMake(11.16, 25.44), controlPoint1: CGPointMake(11.24, 25.31), controlPoint2: CGPointMake(11.2, 25.37))
        bezierPath.addCurveToPoint(CGPointMake(11.09, 25.57), controlPoint1: CGPointMake(11.14, 25.48), controlPoint2: CGPointMake(11.12, 25.53))
        bezierPath.addCurveToPoint(CGPointMake(10.99, 25.77), controlPoint1: CGPointMake(11.06, 25.64), controlPoint2: CGPointMake(11.03, 25.71))
        bezierPath.addCurveToPoint(CGPointMake(10.93, 25.91), controlPoint1: CGPointMake(10.97, 25.82), controlPoint2: CGPointMake(10.95, 25.86))
        bezierPath.addCurveToPoint(CGPointMake(10.83, 26.12), controlPoint1: CGPointMake(10.9, 25.98), controlPoint2: CGPointMake(10.87, 26.05))
        bezierPath.addCurveToPoint(CGPointMake(10.78, 26.25), controlPoint1: CGPointMake(10.82, 26.16), controlPoint2: CGPointMake(10.8, 26.2))
        bezierPath.addCurveToPoint(CGPointMake(10.68, 26.5), controlPoint1: CGPointMake(10.74, 26.33), controlPoint2: CGPointMake(10.71, 26.41))
        bezierPath.addCurveToPoint(CGPointMake(10.64, 26.59), controlPoint1: CGPointMake(10.67, 26.53), controlPoint2: CGPointMake(10.65, 26.56))
        bezierPath.addCurveToPoint(CGPointMake(10.64, 26.61), controlPoint1: CGPointMake(10.64, 26.6), controlPoint2: CGPointMake(10.64, 26.6))
        bezierPath.addCurveToPoint(CGPointMake(8.54, 20), controlPoint1: CGPointMake(9.28, 24.68), controlPoint2: CGPointMake(8.54, 22.38))
        bezierPath.addCurveToPoint(CGPointMake(7.77, 19.23), controlPoint1: CGPointMake(8.54, 19.57), controlPoint2: CGPointMake(8.2, 19.23))
        bezierPath.addCurveToPoint(CGPointMake(7, 20), controlPoint1: CGPointMake(7.35, 19.23), controlPoint2: CGPointMake(7, 19.57))
        bezierPath.addCurveToPoint(CGPointMake(10.42, 28.78), controlPoint1: CGPointMake(7, 23.26), controlPoint2: CGPointMake(8.21, 26.38))
        bezierPath.addCurveToPoint(CGPointMake(20, 33), controlPoint1: CGPointMake(12.87, 31.46), controlPoint2: CGPointMake(16.37, 33))
        bezierPath.addCurveToPoint(CGPointMake(29.58, 28.78), controlPoint1: CGPointMake(23.63, 33), controlPoint2: CGPointMake(27.13, 31.46))
        bezierPath.addLineToPoint(CGPointMake(29.58, 28.78))
        bezierPath.addCurveToPoint(CGPointMake(33, 20), controlPoint1: CGPointMake(31.79, 26.38), controlPoint2: CGPointMake(33, 23.26))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(20, 13.98))
        bezierPath.addCurveToPoint(CGPointMake(23.38, 17.36), controlPoint1: CGPointMake(21.86, 13.98), controlPoint2: CGPointMake(23.38, 15.5))
        bezierPath.addCurveToPoint(CGPointMake(20, 20.74), controlPoint1: CGPointMake(23.38, 19.22), controlPoint2: CGPointMake(21.86, 20.74))
        bezierPath.addCurveToPoint(CGPointMake(16.62, 17.36), controlPoint1: CGPointMake(18.14, 20.74), controlPoint2: CGPointMake(16.62, 19.22))
        bezierPath.addCurveToPoint(CGPointMake(20, 13.98), controlPoint1: CGPointMake(16.62, 15.5), controlPoint2: CGPointMake(18.14, 13.98))
        bezierPath.closePath()
        fillColor5.setFill()
        bezierPath.fill()
    }

    public class func drawSadCloudImage() {
        //// Color Declarations
        let fillColor3 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.934, green: 0.930, blue: 0.907, alpha: 1.000)

        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(101.67, 1.36))
        bezierPath.addCurveToPoint(CGPointMake(111.39, 3.76), controlPoint1: CGPointMake(103.41, 1.58), controlPoint2: CGPointMake(110.4, 3.31))
        bezierPath.addCurveToPoint(CGPointMake(143.53, 42.15), controlPoint1: CGPointMake(135.19, 14.59), controlPoint2: CGPointMake(139.48, 28.28))
        bezierPath.addCurveToPoint(CGPointMake(178.41, 72.2), controlPoint1: CGPointMake(172.57, 44.66), controlPoint2: CGPointMake(177.57, 64.94))
        bezierPath.addCurveToPoint(CGPointMake(146.3, 113.55), controlPoint1: CGPointMake(182.62, 101.03), controlPoint2: CGPointMake(158.25, 111.7))
        bezierPath.addCurveToPoint(CGPointMake(87.26, 114.87), controlPoint1: CGPointMake(142.51, 114.13), controlPoint2: CGPointMake(117.52, 114.87))
        bezierPath.addCurveToPoint(CGPointMake(23.08, 109.18), controlPoint1: CGPointMake(46.06, 114.87), controlPoint2: CGPointMake(34.87, 114.78))
        bezierPath.addCurveToPoint(CGPointMake(46.89, 28.31), controlPoint1: CGPointMake(-15.49, 87.97), controlPoint2: CGPointMake(-1.33, 29.68))
        bezierPath.addCurveToPoint(CGPointMake(101.67, 1.36), controlPoint1: CGPointMake(46.94, 28.09), controlPoint2: CGPointMake(55.87, -4.49))
        bezierPath.closePath()
        fillColor3.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(94.61, 58.21))
        bezier2Path.addCurveToPoint(CGPointMake(121.69, 68.41), controlPoint1: CGPointMake(105.45, 58.57), controlPoint2: CGPointMake(115.48, 64.17))
        bezier2Path.addCurveToPoint(CGPointMake(126.91, 72.91), controlPoint1: CGPointMake(122.87, 69.36), controlPoint2: CGPointMake(126.35, 71.06))
        bezier2Path.addCurveToPoint(CGPointMake(124.09, 76.99), controlPoint1: CGPointMake(127.28, 73.08), controlPoint2: CGPointMake(127.13, 76.01))
        bezier2Path.addCurveToPoint(CGPointMake(121.76, 76.14), controlPoint1: CGPointMake(123.19, 77.28), controlPoint2: CGPointMake(122.47, 76.79))
        bezier2Path.addCurveToPoint(CGPointMake(106.4, 66.27), controlPoint1: CGPointMake(117.32, 72.11), controlPoint2: CGPointMake(112.05, 68.38))
        bezier2Path.addCurveToPoint(CGPointMake(74.33, 66.25), controlPoint1: CGPointMake(105.72, 66.02), controlPoint2: CGPointMake(89.53, 60.85))
        bezier2Path.addCurveToPoint(CGPointMake(65.71, 70.32), controlPoint1: CGPointMake(71.39, 67.47), controlPoint2: CGPointMake(67.73, 68.87))
        bezier2Path.addCurveToPoint(CGPointMake(57.44, 76.38), controlPoint1: CGPointMake(64.64, 71.04), controlPoint2: CGPointMake(59.61, 74.55))
        bezier2Path.addCurveToPoint(CGPointMake(53.28, 75.03), controlPoint1: CGPointMake(55.18, 78.28), controlPoint2: CGPointMake(54.39, 75.98))
        bezier2Path.addCurveToPoint(CGPointMake(53.76, 72.07), controlPoint1: CGPointMake(52.07, 74), controlPoint2: CGPointMake(52.61, 73.1))
        bezier2Path.addCurveToPoint(CGPointMake(74.04, 60.31), controlPoint1: CGPointMake(59.69, 66.7), controlPoint2: CGPointMake(66.44, 62.81))
        bezier2Path.addCurveToPoint(CGPointMake(94.61, 58.21), controlPoint1: CGPointMake(75.41, 59.86), controlPoint2: CGPointMake(80.76, 57.76))
        bezier2Path.closePath()
        fillColor4.setFill()
        bezier2Path.fill()
    }

    public class func drawDownloadingCloudsImage() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let fillColor3 = UIColor(red: 1.000, green: 0.998, blue: 0.995, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.934, green: 0.930, blue: 0.907, alpha: 1.000)

        //// Shadow Declarations
        let shadow2 = NSShadow()
        shadow2.shadowColor = UIColor.blackColor().colorWithAlphaComponent(0.15)
        shadow2.shadowOffset = CGSizeMake(3.1, 3.1)
        shadow2.shadowBlurRadius = 21

        //// Group
        //// Bezier 368 Drawing
        let bezier368Path = UIBezierPath()
        bezier368Path.moveToPoint(CGPointMake(177.23, 44.17))
        bezier368Path.addCurveToPoint(CGPointMake(182.83, 45.57), controlPoint1: CGPointMake(178.23, 44.3), controlPoint2: CGPointMake(182.26, 45.31))
        bezier368Path.addCurveToPoint(CGPointMake(201.35, 67.86), controlPoint1: CGPointMake(196.55, 51.86), controlPoint2: CGPointMake(199.02, 59.81))
        bezier368Path.addCurveToPoint(CGPointMake(221.45, 85.32), controlPoint1: CGPointMake(218.08, 69.32), controlPoint2: CGPointMake(220.96, 81.1))
        bezier368Path.addCurveToPoint(CGPointMake(202.94, 109.33), controlPoint1: CGPointMake(223.87, 102.06), controlPoint2: CGPointMake(209.83, 108.26))
        bezier368Path.addCurveToPoint(CGPointMake(168.92, 110.1), controlPoint1: CGPointMake(200.76, 109.67), controlPoint2: CGPointMake(186.36, 109.79))
        bezier368Path.addCurveToPoint(CGPointMake(132.76, 106.39), controlPoint1: CGPointMake(148.9, 110.46), controlPoint2: CGPointMake(139.55, 109.65))
        bezier368Path.addCurveToPoint(CGPointMake(145.66, 59.83), controlPoint1: CGPointMake(109.98, 94.54), controlPoint2: CGPointMake(117.88, 60.62))
        bezier368Path.addCurveToPoint(CGPointMake(177.23, 44.17), controlPoint1: CGPointMake(145.69, 59.69), controlPoint2: CGPointMake(150.84, 40.77))
        bezier368Path.closePath()
        fillColor3.setFill()
        bezier368Path.fill()


        //// Bezier 732 Drawing
        let bezier732Path = UIBezierPath()
        bezier732Path.moveToPoint(CGPointMake(171.38, 92.43))
        bezier732Path.addLineToPoint(CGPointMake(171.38, 92.43))
        bezier732Path.addCurveToPoint(CGPointMake(169.56, 90.61), controlPoint1: CGPointMake(170.38, 92.43), controlPoint2: CGPointMake(169.56, 91.61))
        bezier732Path.addLineToPoint(CGPointMake(169.56, 63.25))
        bezier732Path.addCurveToPoint(CGPointMake(171.38, 61.43), controlPoint1: CGPointMake(169.56, 62.25), controlPoint2: CGPointMake(170.38, 61.43))
        bezier732Path.addCurveToPoint(CGPointMake(173.19, 63.25), controlPoint1: CGPointMake(172.38, 61.43), controlPoint2: CGPointMake(173.19, 62.25))
        bezier732Path.addLineToPoint(CGPointMake(173.19, 90.61))
        bezier732Path.addCurveToPoint(CGPointMake(171.38, 92.43), controlPoint1: CGPointMake(173.19, 91.61), controlPoint2: CGPointMake(172.38, 92.43))
        bezier732Path.closePath()
        fillColor4.setFill()
        bezier732Path.fill()


        //// Bezier 733 Drawing
        let bezier733Path = UIBezierPath()
        bezier733Path.moveToPoint(CGPointMake(170.05, 91.82))
        bezier733Path.addLineToPoint(CGPointMake(170.05, 91.82))
        bezier733Path.addCurveToPoint(CGPointMake(172.62, 91.98), controlPoint1: CGPointMake(170.71, 92.57), controlPoint2: CGPointMake(171.87, 92.64))
        bezier733Path.addLineToPoint(CGPointMake(177.78, 87.38))
        bezier733Path.addCurveToPoint(CGPointMake(177.94, 84.81), controlPoint1: CGPointMake(178.53, 86.72), controlPoint2: CGPointMake(178.6, 85.56))
        bezier733Path.addCurveToPoint(CGPointMake(175.37, 84.66), controlPoint1: CGPointMake(177.27, 84.06), controlPoint2: CGPointMake(176.12, 83.99))
        bezier733Path.addLineToPoint(CGPointMake(170.2, 89.25))
        bezier733Path.addCurveToPoint(CGPointMake(170.05, 91.82), controlPoint1: CGPointMake(169.46, 89.92), controlPoint2: CGPointMake(169.39, 91.07))
        bezier733Path.closePath()
        fillColor4.setFill()
        bezier733Path.fill()


        //// Rectangle 2 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 168.7, 88.32)
        CGContextRotateCTM(context, 41.55 * CGFloat(M_PI) / 180)

        let rectangle2Path = UIBezierPath(roundedRect: CGRectMake(-5.27, -1.81, 10.54, 3.62), cornerRadius: 1.81)
        fillColor4.setFill()
        rectangle2Path.fill()

        CGContextRestoreGState(context)


        //// Group 131
        CGContextSaveGState(context)
        CGContextBeginTransparencyLayer(context, nil)

        //// Clip Clip 131
        let clip131Path = UIBezierPath()
        clip131Path.moveToPoint(CGPointMake(165.95, 84.34))
        clip131Path.addCurveToPoint(CGPointMake(164.98, 84.97), controlPoint1: CGPointMake(165.59, 84.34), controlPoint2: CGPointMake(165.24, 84.55))
        clip131Path.addCurveToPoint(CGPointMake(165.09, 87.66), controlPoint1: CGPointMake(164.51, 85.76), controlPoint2: CGPointMake(164.56, 86.96))
        clip131Path.addLineToPoint(CGPointMake(166.74, 89.8))
        clip131Path.addLineToPoint(CGPointMake(166.74, 84.72))
        clip131Path.addCurveToPoint(CGPointMake(165.95, 84.34), controlPoint1: CGPointMake(166.5, 84.46), controlPoint2: CGPointMake(166.23, 84.34))
        clip131Path.closePath()
        clip131Path.addClip()


        //// Picture 131 Drawing


        CGContextEndTransparencyLayer(context)
        CGContextRestoreGState(context)


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(147.12, 52.54))
        bezier3Path.addCurveToPoint(CGPointMake(149.99, 62.24), controlPoint1: CGPointMake(149.04, 56.39), controlPoint2: CGPointMake(149.74, 60.03))
        bezier3Path.addCurveToPoint(CGPointMake(122.69, 97.69), controlPoint1: CGPointMake(153.57, 86.96), controlPoint2: CGPointMake(132.85, 96.1))
        bezier3Path.addCurveToPoint(CGPointMake(122.05, 97.76), controlPoint1: CGPointMake(122.52, 97.71), controlPoint2: CGPointMake(122.31, 97.74))
        bezier3Path.addCurveToPoint(CGPointMake(143.86, 58.74), controlPoint1: CGPointMake(111.38, 83.03), controlPoint2: CGPointMake(120.72, 59.4))
        bezier3Path.addCurveToPoint(CGPointMake(147.12, 52.54), controlPoint1: CGPointMake(143.87, 58.69), controlPoint2: CGPointMake(144.65, 55.83))
        bezier3Path.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, shadow2.shadowOffset, shadow2.shadowBlurRadius, (shadow2.shadowColor as! UIColor).CGColor)
        fillColor3.setFill()
        bezier3Path.fill()
        CGContextRestoreGState(context)



        //// Bezier 865 Drawing
        let bezier865Path = UIBezierPath()
        bezier865Path.moveToPoint(CGPointMake(87.26, 2.6))
        bezier865Path.addCurveToPoint(CGPointMake(95.53, 4.66), controlPoint1: CGPointMake(88.74, 2.79), controlPoint2: CGPointMake(94.69, 4.28))
        bezier865Path.addCurveToPoint(CGPointMake(122.86, 37.57), controlPoint1: CGPointMake(115.77, 13.95), controlPoint2: CGPointMake(119.42, 25.68))
        bezier865Path.addCurveToPoint(CGPointMake(152.52, 63.33), controlPoint1: CGPointMake(147.56, 39.72), controlPoint2: CGPointMake(151.8, 57.1))
        bezier865Path.addCurveToPoint(CGPointMake(125.21, 98.77), controlPoint1: CGPointMake(156.1, 88.04), controlPoint2: CGPointMake(135.38, 97.19))
        bezier865Path.addCurveToPoint(CGPointMake(75, 99.91), controlPoint1: CGPointMake(122, 99.27), controlPoint2: CGPointMake(100.74, 99.44))
        bezier865Path.addCurveToPoint(CGPointMake(21.63, 94.43), controlPoint1: CGPointMake(45.45, 100.44), controlPoint2: CGPointMake(31.65, 99.24))
        bezier865Path.addCurveToPoint(CGPointMake(40.67, 25.71), controlPoint1: CGPointMake(-11.99, 76.94), controlPoint2: CGPointMake(-0.33, 26.88))
        bezier865Path.addCurveToPoint(CGPointMake(87.26, 2.6), controlPoint1: CGPointMake(40.71, 25.51), controlPoint2: CGPointMake(48.31, -2.41))
        bezier865Path.closePath()
        fillColor3.setFill()
        bezier865Path.fill()


        //// Rectangle 134 Drawing
        let rectangle134Path = UIBezierPath(roundedRect: CGRectMake(75.86, 28.11, 5.85, 45.55), cornerRadius: 2.92)
        fillColor4.setFill()
        rectangle134Path.fill()


        //// Bezier 1229 Drawing
        let bezier1229Path = UIBezierPath()
        bezier1229Path.moveToPoint(CGPointMake(76.67, 72.93))
        bezier1229Path.addLineToPoint(CGPointMake(76.67, 72.93))
        bezier1229Path.addCurveToPoint(CGPointMake(80.45, 73.16), controlPoint1: CGPointMake(77.64, 74.04), controlPoint2: CGPointMake(79.35, 74.14))
        bezier1229Path.addLineToPoint(CGPointMake(88.08, 66.38))
        bezier1229Path.addCurveToPoint(CGPointMake(88.31, 62.59), controlPoint1: CGPointMake(89.18, 65.4), controlPoint2: CGPointMake(89.28, 63.69))
        bezier1229Path.addCurveToPoint(CGPointMake(84.52, 62.36), controlPoint1: CGPointMake(87.33, 61.48), controlPoint2: CGPointMake(85.62, 61.38))
        bezier1229Path.addLineToPoint(CGPointMake(76.89, 69.14))
        bezier1229Path.addCurveToPoint(CGPointMake(76.67, 72.93), controlPoint1: CGPointMake(75.79, 70.12), controlPoint2: CGPointMake(75.69, 71.82))
        bezier1229Path.closePath()
        fillColor4.setFill()
        bezier1229Path.fill()


        //// Bezier 1230 Drawing
        let bezier1230Path = UIBezierPath()
        bezier1230Path.moveToPoint(CGPointMake(80.5, 72.93))
        bezier1230Path.addLineToPoint(CGPointMake(80.5, 72.93))
        bezier1230Path.addCurveToPoint(CGPointMake(76.71, 73.16), controlPoint1: CGPointMake(79.52, 74.04), controlPoint2: CGPointMake(77.82, 74.14))
        bezier1230Path.addLineToPoint(CGPointMake(69.09, 66.38))
        bezier1230Path.addCurveToPoint(CGPointMake(68.86, 62.59), controlPoint1: CGPointMake(67.98, 65.4), controlPoint2: CGPointMake(67.88, 63.69))
        bezier1230Path.addCurveToPoint(CGPointMake(72.65, 62.36), controlPoint1: CGPointMake(69.84, 61.48), controlPoint2: CGPointMake(71.54, 61.38))
        bezier1230Path.addLineToPoint(CGPointMake(80.27, 69.14))
        bezier1230Path.addCurveToPoint(CGPointMake(80.5, 72.93), controlPoint1: CGPointMake(81.38, 70.12), controlPoint2: CGPointMake(81.48, 71.82))
        bezier1230Path.closePath()
        fillColor4.setFill()
        bezier1230Path.fill()
    }

    public class func drawBackArrowIcon() {

        //// Text Drawing
        let textPath = UIBezierPath()
        textPath.moveToPoint(CGPointMake(17.55, 5.73))
        textPath.addCurveToPoint(CGPointMake(17.36, 6.16), controlPoint1: CGPointMake(17.55, 5.89), controlPoint2: CGPointMake(17.48, 6.03))
        textPath.addLineToPoint(CGPointMake(10.12, 13.39))
        textPath.addLineToPoint(CGPointMake(17.36, 20.63))
        textPath.addCurveToPoint(CGPointMake(17.55, 21.05), controlPoint1: CGPointMake(17.48, 20.75), controlPoint2: CGPointMake(17.55, 20.89))
        textPath.addCurveToPoint(CGPointMake(17.36, 21.48), controlPoint1: CGPointMake(17.55, 21.21), controlPoint2: CGPointMake(17.48, 21.35))
        textPath.addLineToPoint(CGPointMake(16.44, 22.4))
        textPath.addCurveToPoint(CGPointMake(16.02, 22.58), controlPoint1: CGPointMake(16.32, 22.52), controlPoint2: CGPointMake(16.18, 22.58))
        textPath.addCurveToPoint(CGPointMake(15.59, 22.4), controlPoint1: CGPointMake(15.86, 22.58), controlPoint2: CGPointMake(15.72, 22.52))
        textPath.addLineToPoint(CGPointMake(7.01, 13.82))
        textPath.addCurveToPoint(CGPointMake(6.83, 13.39), controlPoint1: CGPointMake(6.89, 13.69), controlPoint2: CGPointMake(6.83, 13.55))
        textPath.addCurveToPoint(CGPointMake(7.01, 12.97), controlPoint1: CGPointMake(6.83, 13.23), controlPoint2: CGPointMake(6.89, 13.09))
        textPath.addLineToPoint(CGPointMake(15.59, 4.39))
        textPath.addCurveToPoint(CGPointMake(16.02, 4.2), controlPoint1: CGPointMake(15.72, 4.27), controlPoint2: CGPointMake(15.86, 4.2))
        textPath.addCurveToPoint(CGPointMake(16.44, 4.39), controlPoint1: CGPointMake(16.18, 4.2), controlPoint2: CGPointMake(16.32, 4.27))
        textPath.addLineToPoint(CGPointMake(17.36, 5.31))
        textPath.addCurveToPoint(CGPointMake(17.55, 5.73), controlPoint1: CGPointMake(17.48, 5.43), controlPoint2: CGPointMake(17.55, 5.57))
        textPath.closePath()
        UIColor.whiteColor().setFill()
        textPath.fill()
    }

    //// Generated Images

    public class var imageOfBankIDFullLogoImage: UIImage {
        if Cache.imageOfBankIDFullLogoImage != nil {
            return Cache.imageOfBankIDFullLogoImage!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(612, 138), false, 0)
            CivilbudgetStyleKit.drawBankIDFullLogoImage()

        Cache.imageOfBankIDFullLogoImage = UIGraphicsGetImageFromCurrentImageContext().imageWithRenderingMode(.AlwaysOriginal)
        UIGraphicsEndImageContext()

        return Cache.imageOfBankIDFullLogoImage!
    }

    public class func imageOfProjectCellBackground(highlighted highlighted: Bool = false) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 30), false, 0)
            CivilbudgetStyleKit.drawProjectCellBackground(highlighted: highlighted)

        let imageOfProjectCellBackground = UIGraphicsGetImageFromCurrentImageContext().imageWithRenderingMode(.AlwaysOriginal)
        UIGraphicsEndImageContext()

        return imageOfProjectCellBackground
    }

    public class var imageOfBottomSocialButtonBackground: UIImage {
        if Cache.imageOfBottomSocialButtonBackground != nil {
            return Cache.imageOfBottomSocialButtonBackground!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 44), false, 0)
            CivilbudgetStyleKit.drawBottomSocialButtonBackground()

        Cache.imageOfBottomSocialButtonBackground = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBottomSocialButtonBackground!
    }

    public class var imageOfDetailsButtonBackground: UIImage {
        if Cache.imageOfDetailsButtonBackground != nil {
            return Cache.imageOfDetailsButtonBackground!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(60, 20), false, 0)
            CivilbudgetStyleKit.drawDetailsButtonBackground()

        Cache.imageOfDetailsButtonBackground = UIGraphicsGetImageFromCurrentImageContext().resizableImageWithCapInsets(UIEdgeInsetsMake(8, 10, 8, 10), resizingMode: .Stretch).imageWithRenderingMode(.AlwaysOriginal)
        UIGraphicsEndImageContext()

        return Cache.imageOfDetailsButtonBackground!
    }

    public class func imageOfSupportButtonBackground(supported supported: Bool = true) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(60, 20), false, 0)
            CivilbudgetStyleKit.drawSupportButtonBackground(supported: supported)

        let imageOfSupportButtonBackground = UIGraphicsGetImageFromCurrentImageContext().resizableImageWithCapInsets(UIEdgeInsetsMake(7, 7, 7, 7), resizingMode: .Tile).imageWithRenderingMode(.AlwaysOriginal)
        UIGraphicsEndImageContext()

        return imageOfSupportButtonBackground
    }

    public class var imageOfUserProfileImagePlaceholder: UIImage {
        if Cache.imageOfUserProfileImagePlaceholder != nil {
            return Cache.imageOfUserProfileImagePlaceholder!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), false, 0)
            CivilbudgetStyleKit.drawUserProfileImagePlaceholder()

        Cache.imageOfUserProfileImagePlaceholder = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfUserProfileImagePlaceholder!
    }

    public class var imageOfSadCloudImage: UIImage {
        if Cache.imageOfSadCloudImage != nil {
            return Cache.imageOfSadCloudImage!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(180, 117), false, 0)
            CivilbudgetStyleKit.drawSadCloudImage()

        Cache.imageOfSadCloudImage = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfSadCloudImage!
    }

    public class var imageOfDownloadingCloudsImage: UIImage {
        if Cache.imageOfDownloadingCloudsImage != nil {
            return Cache.imageOfDownloadingCloudsImage!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(224, 112), false, 0)
            CivilbudgetStyleKit.drawDownloadingCloudsImage()

        Cache.imageOfDownloadingCloudsImage = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfDownloadingCloudsImage!
    }

    public class var imageOfBackArrowIcon: UIImage {
        if Cache.imageOfBackArrowIcon != nil {
            return Cache.imageOfBackArrowIcon!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(22, 27), false, 0)
            CivilbudgetStyleKit.drawBackArrowIcon()

        Cache.imageOfBackArrowIcon = UIGraphicsGetImageFromCurrentImageContext().imageWithRenderingMode(.AlwaysOriginal)
        UIGraphicsEndImageContext()

        return Cache.imageOfBackArrowIcon!
    }

    //// Customization Infrastructure

    @IBOutlet var bankIDFullLogoImageTargets: [AnyObject]! {
        get { return Cache.bankIDFullLogoImageTargets }
        set {
            Cache.bankIDFullLogoImageTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector("setImage:", withObject: CivilbudgetStyleKit.imageOfBankIDFullLogoImage)
            }
        }
    }

    @IBOutlet var bottomSocialButtonBackgroundTargets: [AnyObject]! {
        get { return Cache.bottomSocialButtonBackgroundTargets }
        set {
            Cache.bottomSocialButtonBackgroundTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector("setImage:", withObject: CivilbudgetStyleKit.imageOfBottomSocialButtonBackground)
            }
        }
    }

    @IBOutlet var detailsButtonBackgroundTargets: [AnyObject]! {
        get { return Cache.detailsButtonBackgroundTargets }
        set {
            Cache.detailsButtonBackgroundTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector("setImage:", withObject: CivilbudgetStyleKit.imageOfDetailsButtonBackground)
            }
        }
    }

    @IBOutlet var userProfileImagePlaceholderTargets: [AnyObject]! {
        get { return Cache.userProfileImagePlaceholderTargets }
        set {
            Cache.userProfileImagePlaceholderTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector("setImage:", withObject: CivilbudgetStyleKit.imageOfUserProfileImagePlaceholder)
            }
        }
    }

    @IBOutlet var sadCloudImageTargets: [AnyObject]! {
        get { return Cache.sadCloudImageTargets }
        set {
            Cache.sadCloudImageTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector("setImage:", withObject: CivilbudgetStyleKit.imageOfSadCloudImage)
            }
        }
    }

    @IBOutlet var downloadingCloudsImageTargets: [AnyObject]! {
        get { return Cache.downloadingCloudsImageTargets }
        set {
            Cache.downloadingCloudsImageTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector("setImage:", withObject: CivilbudgetStyleKit.imageOfDownloadingCloudsImage)
            }
        }
    }

    @IBOutlet var backArrowIconTargets: [AnyObject]! {
        get { return Cache.backArrowIconTargets }
        set {
            Cache.backArrowIconTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector("setImage:", withObject: CivilbudgetStyleKit.imageOfBackArrowIcon)
            }
        }
    }

}



extension UIColor {
    func colorWithHue(newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func colorWithSaturation(newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, brightness: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func colorWithBrightness(newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func colorWithAlpha(newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1.0, saturation: CGFloat = 1.0, brightness: CGFloat = 1.0
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func colorWithHighlight(highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func colorWithShadow(shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1.0, green: CGFloat = 1.0, blue: CGFloat = 1.0, alpha: CGFloat = 1.0
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
}
